{"ast":null,"code":"import _classCallCheck from \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/GoogleMap.js\";\nimport React, { Component } from \"react\";\nimport { readEnv } from \"read-env\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport axios from \"axios\";\nvar mapStyles = {\n  width: 250,\n  height: 300,\n  borderRadius: \"8px\",\n  boxShadow: \"0px 2px 5px 0.5px #E3E3E3\"\n};\nexport var GoogleMap = /*#__PURE__*/function (_Component) {\n  _inherits(GoogleMap, _Component);\n\n  function GoogleMap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleMap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showingInfoWindow: false,\n      // Hides or shows the InfoWindow\n      activeMarker: {},\n      // Shows the active marker upon click\n      selectedPlace: {} // Shows the InfoWindow to the selected place upon a marker\n\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleMap, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        style: mapStyles,\n        initialCenter: {\n          lat: 48.43699935,\n          lng: -123.36036146782024\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: \"Toms house\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, this.state.selectedPlace.name))));\n    }\n  }]);\n\n  return GoogleMap;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCyMLV15CqMzB846p53qsoJP6g7d471hpo\"\n})(GoogleMap);","map":{"version":3,"sources":["/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/GoogleMap.js"],"names":["React","Component","readEnv","Map","GoogleApiWrapper","InfoWindow","Marker","axios","mapStyles","width","height","borderRadius","boxShadow","GoogleMap","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","google","lat","lng","name","apiKey"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,UAAhC,EAA4CC,MAA5C,QAA0D,mBAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,GADS;AAEhBC,EAAAA,MAAM,EAAE,GAFQ;AAGhBC,EAAAA,YAAY,EAAE,KAHE;AAIhBC,EAAAA,SAAS,EAAE;AAJK,CAAlB;AAOA,WAAaC,SAAb;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,KADF,GACU;AACNC,MAAAA,iBAAiB,EAAE,KADb;AACoB;AAC1BC,MAAAA,YAAY,EAAE,EAFR;AAEY;AAClBC,MAAAA,aAAa,EAAE,EAHT,CAGa;;AAHb,KADV;;AAAA,UAOEC,aAPF,GAOkB,UAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB;AAAA,aACd,MAAKC,QAAL,CAAc;AACZL,QAAAA,aAAa,EAAEE,KADH;AAEZH,QAAAA,YAAY,EAAEI,MAFF;AAGZL,QAAAA,iBAAiB,EAAE;AAHP,OAAd,CADc;AAAA,KAPlB;;AAAA,UAcEQ,OAdF,GAcY,UAACJ,KAAD,EAAW;AACnB,UAAI,MAAKL,KAAL,CAAWC,iBAAf,EAAkC;AAChC,cAAKO,QAAL,CAAc;AACZP,UAAAA,iBAAiB,EAAE,KADP;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KArBH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAuBW;AACP,0BACE,oBAAC,GAAD;AACE,QAAA,MAAM,EAAE,KAAKG,KAAL,CAAWK,MADrB;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,KAAK,EAAEhB,SAHT;AAIE,QAAA,aAAa,EAAE;AACbiB,UAAAA,GAAG,EAAE,WADQ;AAEbC,UAAAA,GAAG,EAAE,CAAC;AAFO,SAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKR,aAAtB;AAAqC,QAAA,IAAI,EAAE,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,eAUE,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWE,YADrB;AAEE,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,iBAFtB;AAGE,QAAA,OAAO,EAAE,KAAKQ,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKT,KAAL,CAAWG,aAAX,CAAyBU,IAA9B,CADF,CALF,CAVF,CADF;AAsBD;AA9CH;;AAAA;AAAA,EAA+B1B,SAA/B;AAiDA,eAAeG,gBAAgB,CAAC;AAC9BwB,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZf,SAFY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { readEnv } from \"read-env\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport axios from \"axios\";\n\nconst mapStyles = {\n  width: 250,\n  height: 300,\n  borderRadius: \"8px\",\n  boxShadow: \"0px 2px 5px 0.5px #E3E3E3\",\n};\n\nexport class GoogleMap extends Component {\n  state = {\n    showingInfoWindow: false, // Hides or shows the InfoWindow\n    activeMarker: {}, // Shows the active marker upon click\n    selectedPlace: {}, // Shows the InfoWindow to the selected place upon a marker\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n\n  onClose = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={14}\n        style={mapStyles}\n        initialCenter={{\n          lat: 48.43699935,\n          lng: -123.36036146782024,\n        }}\n      >\n        <Marker onClick={this.onMarkerClick} name={\"Toms house\"} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCyMLV15CqMzB846p53qsoJP6g7d471hpo\",\n})(GoogleMap);\n"]},"metadata":{},"sourceType":"module"}