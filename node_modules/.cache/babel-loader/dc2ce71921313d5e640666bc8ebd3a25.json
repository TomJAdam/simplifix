{"ast":null,"code":"import _slicedToArray from \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/Conversations.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport Conversation from './Conversation';\nvar useStyles = makeStyles(function (props) {\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      boxShadow: \"0px 2px 5px 0.5px #E3E3E3\",\n      // minHeight: props => props.conversations.length === 0 ? '100px' : '400px',\n      minHeight: function minHeight(props) {\n        console.log(props);\n      },\n      borderRadius: '10px',\n      padding: '10px'\n    },\n    title: {\n      borderBottom: '2px solid #0EE290',\n      padding: '5px'\n    }\n  };\n});\nexport default function Conversations(props) {\n  var _this = this;\n\n  var classes = useStyles(props);\n  var userID = props.userID;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversations = _useState2[0],\n      setConversations = _useState2[1]; // console.log('in conversations !!!!', props.conv_id)\n\n\n  useEffect(function () {\n    axios.get(\"/api/conversations/\".concat(userID)).then(function (response) {\n      setConversations(response.data);\n    });\n  }, []);\n  return conversations.length !== 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Conversations\"), conversations.map(function (conversation) {\n    return /*#__PURE__*/React.createElement(Conversation, Object.assign({\n      conv_id: props.conv_id\n    }, conversation, {\n      userID: userID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"You don't have any conversations\"));\n}","map":{"version":3,"sources":["/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/Conversations.js"],"names":["React","useEffect","useState","makeStyles","axios","Conversation","useStyles","props","root","display","flexDirection","alignItems","boxShadow","minHeight","console","log","borderRadius","padding","title","borderBottom","Conversations","classes","userID","conversations","setConversations","get","then","response","data","length","map","conversation","conv_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAACI,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,aAAa,EAAE,QAFX;AAGJC,MAAAA,UAAU,EAAE,QAHR;AAIJC,MAAAA,SAAS,EAAE,2BAJP;AAKJ;AACAC,MAAAA,SAAS,EAAE,mBAAAN,KAAK,EAAI;AAClBO,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,OARG;AASJS,MAAAA,YAAY,EAAE,MATV;AAUJC,MAAAA,OAAO,EAAE;AAVL,KADiC;AAevCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,YAAY,EAAE,mBADT;AAELF,MAAAA,OAAO,EAAE;AAFJ;AAfgC,GAAZ;AAAA,CAAD,CAA5B;AAsBA,eAAe,SAASG,aAAT,CAAuBb,KAAvB,EAA8B;AAAA;;AAE3C,MAAMc,OAAO,GAAGf,SAAS,CAACC,KAAD,CAAzB;AAF2C,MAGnCe,MAHmC,GAGxBf,KAHwB,CAGnCe,MAHmC;;AAAA,kBAIDpB,QAAQ,CAAC,EAAD,CAJP;AAAA;AAAA,MAIpCqB,aAJoC;AAAA,MAIrBC,gBAJqB,kBAK3C;;;AAEAvB,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,KAAK,CAACqB,GAAN,8BAAgCH,MAAhC,GACCI,IADD,CACM,UAAAC,QAAQ,EAAI;AAChBH,MAAAA,gBAAgB,CAACG,QAAQ,CAACC,IAAV,CAAhB;AACD,KAHD;AAID,GALQ,EAKP,EALO,CAAT;AAOA,SACEL,aAAa,CAACM,MAAd,KAAyB,CAAzB,gBACE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACb,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAEa,OAAO,CAACH,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAECK,aAAa,CAACO,GAAd,CAAkB,UAAAC,YAAY,EAAI;AAC/B,wBAAO,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAExB,KAAK,CAACyB;AAA7B,OAA0CD,YAA1C;AAAwD,MAAA,MAAM,EAAET,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAFA,CAFD,CADF,gBASE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACb,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAEa,OAAO,CAACH,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,CAVJ;AAcD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport Conversation from './Conversation';\n\nconst useStyles = makeStyles((props) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    boxShadow: \"0px 2px 5px 0.5px #E3E3E3\",\n    // minHeight: props => props.conversations.length === 0 ? '100px' : '400px',\n    minHeight: props => {\n      console.log(props);\n    },\n    borderRadius: '10px',\n    padding: '10px'\n\n  },\n\n  title: {\n    borderBottom: '2px solid #0EE290',\n    padding: '5px'\n  }\n}));\n\n\nexport default function Conversations(props) {\n\n  const classes = useStyles(props);\n  const { userID } = props;\n  const [conversations, setConversations] = useState([]);\n  // console.log('in conversations !!!!', props.conv_id)\n\n  useEffect(() => {\n    axios.get(`/api/conversations/${userID}`)\n    .then(response => {\n      setConversations(response.data);\n    })\n  },[])\n\n  return (\n    conversations.length !== 0 ? (\n      <div className={classes.root}>\n      <h2 className={classes.title}>Conversations</h2>\n      {conversations.map(conversation => {\n          return <Conversation conv_id={props.conv_id} {...conversation} userID={userID}/>\n      })}\n    </div>\n    ) \n    : \n      <div className={classes.root}>\n        <h3 className={classes.title}>You don't have any conversations</h3>\n      </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}