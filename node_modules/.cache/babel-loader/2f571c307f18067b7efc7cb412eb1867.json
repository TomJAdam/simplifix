{"ast":null,"code":"!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = e || self).readEnv = t();\n}(this, function () {\n  \"use strict\";\n\n  var _e = function e() {\n    return (_e = Object.assign || function (e) {\n      for (var t, r = 1, n = arguments.length; r < n; r++) {\n        for (var o in t = arguments[r]) {\n          Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);\n        }\n      }\n\n      return e;\n    }).apply(this, arguments);\n  },\n      t = {\n    format: \"camelcase\",\n    separator: \"__\",\n    sanitize: {\n      object: !0,\n      array: !0,\n      bool: !0,\n      int: !0,\n      float: !0\n    },\n    includePrefix: !1\n  };\n\n  var r = function r(e, t) {\n    if (\"string\" != typeof e && !Array.isArray(e)) throw new TypeError(\"Expected the input to be `string | string[]`\");\n    t = Object.assign({\n      pascalCase: !1\n    }, t);\n    return 0 === (e = Array.isArray(e) ? e.map(function (e) {\n      return e.trim();\n    }).filter(function (e) {\n      return e.length;\n    }).join(\"-\") : e.trim()).length ? \"\" : 1 === e.length ? t.pascalCase ? e.toUpperCase() : e.toLowerCase() : (e !== e.toLowerCase() && (e = function (e) {\n      var t = !1,\n          r = !1,\n          n = !1;\n\n      for (var _o = 0; _o < e.length; _o++) {\n        var _a = e[_o];\n        t && /[a-zA-Z]/.test(_a) && _a.toUpperCase() === _a ? (e = e.slice(0, _o) + \"-\" + e.slice(_o), t = !1, n = r, r = !0, _o++) : r && n && /[a-zA-Z]/.test(_a) && _a.toLowerCase() === _a ? (e = e.slice(0, _o - 1) + \"-\" + e.slice(_o - 1), n = r, r = !1, t = !0) : (t = _a.toLowerCase() === _a && _a.toUpperCase() !== _a, n = r, r = _a.toUpperCase() === _a && _a.toLowerCase() !== _a);\n      }\n\n      return e;\n    }(e)), e = e.replace(/^[_.\\- ]+/, \"\").toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (e, t) {\n      return t.toUpperCase();\n    }).replace(/\\d+(\\w|$)/g, function (e) {\n      return e.toUpperCase();\n    }), r = e, t.pascalCase ? r.charAt(0).toUpperCase() + r.slice(1) : r);\n    var r;\n  };\n\n  var n = r,\n      o = r;\n  n.default = o;\n  var a = {\n    camelcase: function camelcase(e) {\n      return n(e.toLowerCase());\n    },\n    pascalcase: function pascalcase(e) {\n      return n(e.toLowerCase(), {\n        pascalCase: !0\n      });\n    },\n    lowercase: function lowercase(e) {\n      return e.toLowerCase();\n    },\n    uppercase: function uppercase(e) {\n      return e.toUpperCase();\n    }\n  };\n  return function (r, n) {\n    void 0 === n && (n = {});\n    var o,\n        s = (\"object\" == typeof (o = n).sanitize && (o.sanitize = _e(_e({}, t.sanitize), o.sanitize)), _e(_e({}, t), o)),\n        i = s.format,\n        c = s.source,\n        p = void 0 === c ? process.env : c,\n        u = s.includePrefix,\n        f = s.sanitize,\n        l = s.separator,\n        y = Object.keys(p);\n    return \"string\" == typeof r && r && (y = y.filter(function (e) {\n      return 0 === e.indexOf(r);\n    })), y.reduce(function (e, t) {\n      var n,\n          o,\n          s = null === (n = p[t]) || void 0 === n ? void 0 : n.trim(),\n          c = t;\n      \"object\" == typeof f && s && (s = function (e, t) {\n        if (t.object && function (e) {\n          return \"{\" === e[0] && \"}\" === e[e.length - 1];\n        }(e)) try {\n          return JSON.parse(e);\n        } catch (t) {\n          return e;\n        }\n        if (t.array && function (e) {\n          return \"[\" === e[0] && \"]\" === e[e.length - 1];\n        }(e)) try {\n          return JSON.parse(e);\n        } catch (t) {\n          return e;\n        }\n        return t.int && function (e) {\n          return /^-?\\d+$/.test(e);\n        }(e) ? parseInt(e, 10) : t.float && function (e) {\n          return /^-?\\d*(\\.\\d+)$/.test(e);\n        }(e) ? parseFloat(e) : t.bool && function (e) {\n          var t = e.toLowerCase();\n          return \"true\" === t || \"false\" === t;\n        }(e) ? \"true\" === e.toLowerCase() : e;\n      }(s, f)), !u && \"string\" == typeof r && r && (c = c.replace(r, \"\")), o = \"_\";\n      var y = [c = c.replace(new RegExp(\"^[\" + o + \"]+\"), \"\")];\n      return \"string\" == typeof l && l && (y = c.split(l)), y.reduce(function (e, t, r) {\n        var n = function (e, t) {\n          return \"string\" == typeof t ? a[t](e) : \"function\" == typeof t ? t(e) : e;\n        }(t, i);\n\n        return r === y.length - 1 ? e[n] = s : (\"object\" != typeof e[n] || Array.isArray(e[n])) && (e[n] = {}), e[n];\n      }, e), e;\n    }, {});\n  };\n});","map":null,"metadata":{},"sourceType":"script"}