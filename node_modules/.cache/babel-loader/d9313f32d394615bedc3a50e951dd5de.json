{"ast":null,"code":"import _slicedToArray from \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/Chat.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport queryString from 'query-string';\nimport { UserCookie } from \"../hooks/UserCookie\";\nimport io from 'socket.io-client';\nimport Feed from './Feed';\nimport Input from './Input';\nimport Conversations from './Conversations';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      border: '1px solid red'\n    },\n    main: {\n      display: 'flex'\n    },\n    conv: {\n      border: '1px solid grey'\n    },\n    chat: {\n      display: 'flex',\n      flexDirection: 'column',\n      border: '1px solid blue'\n    }\n  };\n});\nvar socket;\nexport default function Chat(_ref) {\n  var _this = this;\n\n  var location = _ref.location;\n  var classes = useStyles(); // API call to get all messages for particular conversation using conversation_id from url\n  // API call to get id's for conversation\n\n  var _useContext = useContext(UserCookie),\n      cookie = _useContext.cookie,\n      setCookie = _useContext.setCookie;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversationID = _useState2[0],\n      setConversationID = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      room = _useState4[0],\n      setRoom = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userID = _useState6[0],\n      setUserID = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      messages = _useState10[0],\n      setMessages = _useState10[1];\n\n  var ENDPOINT = 'localhost:8080'; // console.log('current user', cookie.user.id);\n  // This used to be inside of useEffect() - not sure if it should be outside - is working but revise later\n\n  var _queryString$parse = queryString.parse(location.search),\n      conv_id = _queryString$parse.conv_id;\n\n  useEffect(function () {\n    axios.get(\"/api/messages/\".concat(conv_id)).then(function (response) {\n      console.log(response.data);\n      setMessages(response.data);\n      console.log('messages', messages);\n    });\n  }, []);\n  useEffect(function () {\n    // const { conv_id } = queryString.parse(location.search);\n    console.log(conv_id);\n    setRoom(conv_id);\n    console.log('room', room);\n    socket = io(ENDPOINT);\n    console.log(socket);\n    console.log('the room we are in', room);\n    return function () {\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  console.log('messages', messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }, \"We are on the chat page currently in room \", room), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.conv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Conversations, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Feed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))), messages.map(function (message) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, message.text);\n  }));\n}","map":{"version":3,"sources":["/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/Chat.js"],"names":["React","useEffect","useContext","useState","queryString","UserCookie","io","Feed","Input","Conversations","makeStyles","axios","useStyles","theme","root","display","flexDirection","alignItems","border","main","conv","chat","socket","Chat","location","classes","cookie","setCookie","conversationID","setConversationID","room","setRoom","userID","setUserID","message","setMessage","messages","setMessages","ENDPOINT","parse","search","conv_id","get","then","response","console","log","data","off","map","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport queryString from 'query-string';\nimport { UserCookie } from \"../hooks/UserCookie\";\nimport io from 'socket.io-client';\nimport Feed from './Feed';\nimport Input from './Input';\nimport Conversations from './Conversations';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    border: '1px solid red'\n  },\n\n  main: {\n    display: 'flex',\n  },\n  \n  conv: {\n    border: '1px solid grey'\n  },\n\n  chat: {\n    display: 'flex',\n    flexDirection: 'column',\n    border: '1px solid blue'\n  }\n}));\n\nlet socket;\n\nexport default function Chat({ location }) {\n\n  const classes = useStyles();\n\n  // API call to get all messages for particular conversation using conversation_id from url\n  // API call to get id's for conversation\n  const { cookie, setCookie } = useContext(UserCookie);\n  const [conversationID, setConversationID] = useState(null);\n  const [room, setRoom] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:8080';\n\n  // console.log('current user', cookie.user.id);\n\n  // This used to be inside of useEffect() - not sure if it should be outside - is working but revise later\n  const { conv_id } = queryString.parse(location.search);\n\n  useEffect(() => {\n    axios.get(`/api/messages/${conv_id}`).then(response => {\n      console.log(response.data);\n      setMessages(response.data);\n      console.log('messages', messages);\n    })\n  },[])\n\n\n  useEffect(() => {\n    // const { conv_id } = queryString.parse(location.search);\n    console.log(conv_id);\n    setRoom(conv_id);\n    console.log('room', room);\n    socket = io(ENDPOINT);\n    console.log(socket);\n    console.log('the room we are in', room)\n\n    return () => {\n      socket.off();\n    }\n  },[ENDPOINT, location.search])\n\n  console.log('messages', messages);\n\n  return (\n    <div className={classes.root}>\n     <h1>We are on the chat page currently in room {room}</h1>\n     <div className={classes.main}>\n        <div className={classes.conv}>\n          <Conversations />\n        </div>\n        <div className={classes.chat}>\n          <Feed />\n          <Input />\n        </div>\n     </div>\n     {messages.map(message => {\n       return <p>{message.text}</p>\n     })}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}