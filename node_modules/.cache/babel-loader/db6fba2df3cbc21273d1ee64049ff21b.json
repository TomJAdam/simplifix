{"ast":null,"code":"import _slicedToArray from \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/CategoryPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, useParams, Link, Switch } from 'react-router-dom';\nimport GigPage from './GigPage';\nimport GigGrid from './Gigs/GigGrid';\nimport axios from 'axios';\nexport default function CategoryPage() {\n  var _this = this;\n\n  var params = useParams();\n  var category = params.category;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      gigs = _useState2[0],\n      setGigs = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gig = _useState4[0],\n      setGig = _useState4[1]; // The first axios request gets the id of the current category page we are on\n  // The second axios request gets the gigs in that category using the id from the first axios request\n  // I am pretty sure there is a better way to do this, was stuck here so decided to try this - SM\n\n\n  useEffect(function () {\n    axios.get(\"/api/categories/\".concat(category)).then(function (response) {\n      return axios.get(\"/api/gigs/category/\".concat(response.data));\n    }).then(function (response) {\n      setGigs(response.data);\n    });\n  }, []); // const getGig = (id) => {\n  //   const gig = gigs.find(gig => gig.id == id);\n  //   setGig(gig);\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/gigs/\".concat(category, \"/:gig_id\"),\n    component: function component() {\n      return /*#__PURE__*/React.createElement(GigPage, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 30\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/gigs/\".concat(category),\n    component: function component() {\n      return /*#__PURE__*/React.createElement(GigGrid, {\n        gigs: gigs,\n        category: category,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 30\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/CategoryPage.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","useParams","Link","Switch","GigPage","GigGrid","axios","CategoryPage","params","category","gigs","setGigs","gig","setGig","get","then","response","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,SAAzC,EAAoDC,IAApD,EAA0DC,MAA1D,QAAwE,kBAAxE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAErC,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,MAAMQ,QAAQ,GAAGD,MAAM,CAACC,QAAxB;;AAHqC,kBAIbZ,QAAQ,CAAC,EAAD,CAJK;AAAA;AAAA,MAI9Ba,IAJ8B;AAAA,MAIxBC,OAJwB;;AAAA,mBAKfd,QAAQ,CAAC,EAAD,CALO;AAAA;AAAA,MAK9Be,GAL8B;AAAA,MAKzBC,MALyB,kBAQrC;AACA;AACA;;;AACAjB,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,KAAK,CAACQ,GAAN,2BAA6BL,QAA7B,GACCM,IADD,CACM,UAAAC,QAAQ,EAAI;AAChB,aAAOV,KAAK,CAACQ,GAAN,8BAAgCE,QAAQ,CAACC,IAAzC,EAAP;AACD,KAHD,EAICF,IAJD,CAIM,UAAAC,QAAQ,EAAI;AAChBL,MAAAA,OAAO,CAACK,QAAQ,CAACC,IAAV,CAAP;AACD,KAND;AAOD,GARQ,EAQP,EARO,CAAT,CAXqC,CAqBrC;AACA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,kBAAWR,QAAX,aADN;AAEE,IAAA,SAAS,EAAE;AAAA,0BAAM,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,KAAD;AACE,IAAA,IAAI,kBAAWA,QAAX,CADN;AAEE,IAAA,SAAS,EAAE;AAAA,0BAAM,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEC,IAAf;AAAqB,QAAA,QAAQ,EAAED,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF,CADF,CADF;AAkBD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, useParams, Link, Switch } from 'react-router-dom';\nimport GigPage from './GigPage';\nimport GigGrid from './Gigs/GigGrid';\nimport axios from 'axios';\n\nexport default function CategoryPage() {\n\n  const params = useParams();\n  const category = params.category;\n  const [gigs, setGigs] = useState([]);\n  const [gig, setGig] = useState({});\n\n\n  // The first axios request gets the id of the current category page we are on\n  // The second axios request gets the gigs in that category using the id from the first axios request\n  // I am pretty sure there is a better way to do this, was stuck here so decided to try this - SM\n  useEffect(() => {\n    axios.get(`/api/categories/${category}`)\n    .then(response => {\n      return axios.get(`/api/gigs/category/${response.data}`)\n    })\n    .then(response => {\n      setGigs(response.data);\n    })\n  },[]);\n\n  // const getGig = (id) => {\n  //   const gig = gigs.find(gig => gig.id == id);\n  //   setGig(gig);\n  // }\n\n  return (\n    <div>\n      <Router>\n        \n        <Switch>\n          <Route \n            path={`/gigs/${category}/:gig_id`}\n            component={() => <GigPage />}\n          />\n          <Route \n            path={`/gigs/${category}`} \n            component={() => <GigGrid gigs={gigs} category={category}/>}\n          />\n        </Switch>\n\n      </Router>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}