{"ast":null,"code":"import _toConsumableArray from \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/Chat.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport queryString from 'query-string';\nimport { UserCookie } from \"../hooks/UserCookie\";\nimport io from 'socket.io-client';\nimport Feed from './Feed';\nimport Input from './Input';\nimport Conversations from './Conversations';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      border: '1px solid red'\n    },\n    main: {\n      width: '70%',\n      display: 'flex'\n    },\n    conv: {\n      width: '40%',\n      border: '1px solid grey'\n    },\n    chat: {\n      width: '60%',\n      display: 'flex',\n      flexDirection: 'column',\n      border: '1px solid blue'\n    }\n  };\n});\nvar socket;\nexport default function Chat(_ref) {\n  var location = _ref.location;\n  var classes = useStyles(); // API call to get all messages for particular conversation using conversation_id from url\n  // API call to get id's for conversation\n\n  var _useContext = useContext(UserCookie),\n      cookie = _useContext.cookie,\n      setCookie = _useContext.setCookie;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversationID = _useState2[0],\n      setConversationID = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      room = _useState4[0],\n      setRoom = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userID = _useState6[0],\n      setUserID = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      messages = _useState10[0],\n      setMessages = _useState10[1];\n\n  var ENDPOINT = 'localhost:8080'; // console.log(cookie);\n  // console.log('current user', cookie.user.id);\n  // This used to be inside of useEffect() - not sure if it should be outside - is working but revise later\n\n  var _queryString$parse = queryString.parse(location.search),\n      conv_id = _queryString$parse.conv_id;\n\n  useEffect(function () {\n    axios.get(\"/api/messages/\".concat(conv_id)).then(function (response) {\n      console.log(response.data);\n      setMessages(response.data);\n      console.log('messages', messages);\n    });\n  }, []);\n  useEffect(function () {\n    var _queryString$parse2 = queryString.parse(location.search),\n        conv_id = _queryString$parse2.conv_id;\n\n    console.log(conv_id);\n    setRoom(conv_id);\n    console.log('room', room);\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      conv_id: conv_id\n    }, function () {});\n    return function () {\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(function () {\n    socket.on('message', function (message) {\n      setMessages([].concat(_toConsumableArray(messages), [message]));\n    });\n  }, [messages]);\n\n  var sendMessage = function sendMessage(event) {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, function () {\n        return setMessage('');\n      });\n    }\n  };\n\n  console.log('messages', messages);\n  console.log('room before render', room);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }\n  }, \"We are on the chat page currently in room \", room), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.conv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Conversations, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Feed, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/Chat.js"],"names":["React","useEffect","useContext","useState","queryString","UserCookie","io","Feed","Input","Conversations","makeStyles","axios","useStyles","theme","root","display","flexDirection","alignItems","border","main","width","conv","chat","socket","Chat","location","classes","cookie","setCookie","conversationID","setConversationID","room","setRoom","userID","setUserID","message","setMessage","messages","setMessages","ENDPOINT","parse","search","conv_id","get","then","response","console","log","data","emit","off","on","sendMessage","event","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAACG,KAAD;AAAA,SAAY;AAEvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,aAAa,EAAE,QAFX;AAGJC,MAAAA,UAAU,EAAE,QAHR;AAIJC,MAAAA,MAAM,EAAE;AAJJ,KAFiC;AASvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,KADH;AAEJL,MAAAA,OAAO,EAAE;AAFL,KATiC;AAevCM,IAAAA,IAAI,EAAE;AACJD,MAAAA,KAAK,EAAE,KADH;AAEJF,MAAAA,MAAM,EAAE;AAFJ,KAfiC;AAoBvCI,IAAAA,IAAI,EAAE;AACJF,MAAAA,KAAK,EAAE,KADH;AAEJL,MAAAA,OAAO,EAAE,MAFL;AAGJC,MAAAA,aAAa,EAAE,QAHX;AAIJE,MAAAA,MAAM,EAAE;AAJJ;AApBiC,GAAZ;AAAA,CAAD,CAA5B;AA4BA,IAAIK,MAAJ;AAEA,eAAe,SAASC,IAAT,OAA4B;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAEzC,MAAMC,OAAO,GAAGd,SAAS,EAAzB,CAFyC,CAIzC;AACA;;AALyC,oBAMXV,UAAU,CAACG,UAAD,CANC;AAAA,MAMjCsB,MANiC,eAMjCA,MANiC;AAAA,MAMzBC,SANyB,eAMzBA,SANyB;;AAAA,kBAOGzB,QAAQ,CAAC,IAAD,CAPX;AAAA;AAAA,MAOlC0B,cAPkC;AAAA,MAOlBC,iBAPkB;;AAAA,mBAQjB3B,QAAQ,CAAC,IAAD,CARS;AAAA;AAAA,MAQlC4B,IARkC;AAAA,MAQ5BC,OAR4B;;AAAA,mBASb7B,QAAQ,CAAC,IAAD,CATK;AAAA;AAAA,MASlC8B,MATkC;AAAA,MAS1BC,SAT0B;;AAAA,mBAUX/B,QAAQ,CAAC,EAAD,CAVG;AAAA;AAAA,MAUlCgC,OAVkC;AAAA,MAUzBC,UAVyB;;AAAA,mBAWTjC,QAAQ,CAAC,EAAD,CAXC;AAAA;AAAA,MAWlCkC,QAXkC;AAAA,MAWxBC,WAXwB;;AAYzC,MAAMC,QAAQ,GAAG,gBAAjB,CAZyC,CAczC;AACA;AAEA;;AAjByC,2BAkBrBnC,WAAW,CAACoC,KAAZ,CAAkBf,QAAQ,CAACgB,MAA3B,CAlBqB;AAAA,MAkBjCC,OAlBiC,sBAkBjCA,OAlBiC;;AAoBzCzC,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,KAAK,CAACgC,GAAN,yBAA2BD,OAA3B,GAAsCE,IAAtC,CAA2C,UAAAC,QAAQ,EAAI;AACrDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAV,MAAAA,WAAW,CAACO,QAAQ,CAACG,IAAV,CAAX;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBV,QAAxB;AACD,KAJD;AAKD,GANQ,EAMP,EANO,CAAT;AAWApC,EAAAA,SAAS,CAAC,YAAM;AAAA,8BACMG,WAAW,CAACoC,KAAZ,CAAkBf,QAAQ,CAACgB,MAA3B,CADN;AAAA,QACNC,OADM,uBACNA,OADM;;AAEdI,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAV,IAAAA,OAAO,CAACU,OAAD,CAAP;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBhB,IAApB;AACAR,IAAAA,MAAM,GAAGjB,EAAE,CAACiC,QAAD,CAAX;AACAhB,IAAAA,MAAM,CAAC0B,IAAP,CAAY,MAAZ,EAAoB;AAAEP,MAAAA,OAAO,EAAPA;AAAF,KAApB,EAAiC,YAAM,CAEtC,CAFD;AAIA,WAAO,YAAM;AACXnB,MAAAA,MAAM,CAAC2B,GAAP;AACD,KAFD;AAGD,GAbQ,EAaP,CAACX,QAAD,EAAWd,QAAQ,CAACgB,MAApB,CAbO,CAAT;AAeAxC,EAAAA,SAAS,CAAC,YAAM;AACdsB,IAAAA,MAAM,CAAC4B,EAAP,CAAU,SAAV,EAAqB,UAAChB,OAAD,EAAa;AAChCG,MAAAA,WAAW,8BAAKD,QAAL,IAAeF,OAAf,GAAX;AACD,KAFD;AAGD,GAJQ,EAIP,CAACE,QAAD,CAJO,CAAT;;AAMA,MAAMe,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAE7BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGnB,OAAH,EAAY;AACVZ,MAAAA,MAAM,CAAC0B,IAAP,CAAY,aAAZ,EAA2Bd,OAA3B,EAAoC;AAAA,eAAMC,UAAU,CAAC,EAAD,CAAhB;AAAA,OAApC;AACD;AACF,GAPD;;AASAU,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBV,QAAxB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkChB,IAAlC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACZ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAA+CiB,IAA/C,CADD,eAEC;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACP,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,SAAS,EAAEO,OAAO,CAACL,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,eAIG;AAAK,IAAA,SAAS,EAAEK,OAAO,CAACJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEe,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEF,OAAhB;AAAyB,IAAA,UAAU,EAAEC,UAArC;AAAiD,IAAA,WAAW,EAAEgB,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJH,CAFD,CADF;AAcD","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport queryString from 'query-string';\nimport { UserCookie } from \"../hooks/UserCookie\";\nimport io from 'socket.io-client';\nimport Feed from './Feed';\nimport Input from './Input';\nimport Conversations from './Conversations';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    border: '1px solid red'\n  },\n\n  main: {\n    width: '70%',\n    display: 'flex',\n\n  },\n  \n  conv: {\n    width: '40%',\n    border: '1px solid grey'\n  },\n\n  chat: {\n    width: '60%',\n    display: 'flex',\n    flexDirection: 'column',\n    border: '1px solid blue'\n  }\n}));\n\nlet socket;\n\nexport default function Chat({ location }) {\n\n  const classes = useStyles();\n\n  // API call to get all messages for particular conversation using conversation_id from url\n  // API call to get id's for conversation\n  const { cookie, setCookie } = useContext(UserCookie);\n  const [conversationID, setConversationID] = useState(null);\n  const [room, setRoom] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:8080';\n\n  // console.log(cookie);\n  // console.log('current user', cookie.user.id);\n\n  // This used to be inside of useEffect() - not sure if it should be outside - is working but revise later\n  const { conv_id } = queryString.parse(location.search);\n\n  useEffect(() => {\n    axios.get(`/api/messages/${conv_id}`).then(response => {\n      console.log(response.data);\n      setMessages(response.data);\n      console.log('messages', messages);\n    })\n  },[])\n\n\n\n\n  useEffect(() => {\n    const { conv_id } = queryString.parse(location.search);\n    console.log(conv_id);\n    setRoom(conv_id);\n    console.log('room', room);\n    socket = io(ENDPOINT);\n    socket.emit('join', { conv_id }, () => {\n\n    });\n\n    return () => {\n      socket.off();\n    }\n  },[ENDPOINT, location.search])\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessages([...messages, message])\n    })\n  },[messages])\n\n  const sendMessage = (event) => {\n\n    event.preventDefault();\n\n    if(message) {\n      socket.emit('sendMessage', message, () => setMessage(''))\n    }\n  }\n\n  console.log('messages', messages);\n  console.log('room before render', room);\n\n  return (\n    <div className={classes.root}>\n     <h1>We are on the chat page currently in room {room}</h1>\n     <div className={classes.main}>\n        <div className={classes.conv}>\n          <Conversations />\n        </div>\n        <div className={classes.chat}>\n          <Feed messages={messages}/>\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n        </div>\n     </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}