{"ast":null,"code":"import _slicedToArray from \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/Chat.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport queryString from 'query-string';\nimport { UserCookie } from \"../hooks/UserCookie\";\nimport io from 'socket.io-client';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {}\n  };\n});\nvar socket;\nexport default function Chat(_ref) {\n  var location = _ref.location;\n\n  // API call to get all messages for particular conversation using conversation_id from url\n  // API call to get id's for conversation\n  var _useContext = useContext(UserCookie),\n      cookie = _useContext.cookie,\n      setCookie = _useContext.setCookie;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversationID = _useState2[0],\n      setConversationID = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      room = _useState4[0],\n      setRoom = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userID = _useState6[0],\n      setUserID = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      messages = _useState10[0],\n      setMessages = _useState10[1];\n\n  var ENDPOINT = 'localhost:8080';\n  console.log('current user', cookie.user.id);\n  useEffect(function () {}, []);\n  useEffect(function () {\n    var _queryString$parse = queryString.parse(location.search),\n        conv_id = _queryString$parse.conv_id;\n\n    console.log(conv_id);\n    setRoom(conv_id);\n    console.log('room', room);\n    socket = io(ENDPOINT);\n    console.log(socket);\n    console.log('the room we are in', room);\n    return function () {\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, \"We are on the chat page currently in room \", room));\n}","map":{"version":3,"sources":["/Users/shadeemerhi/lighthouse/final/react-express-boilerplate/react-front-end/src/components/Chat.js"],"names":["React","useEffect","useContext","useState","queryString","UserCookie","io","makeStyles","useStyles","theme","root","socket","Chat","location","cookie","setCookie","conversationID","setConversationID","room","setRoom","userID","setUserID","message","setMessage","messages","setMessages","ENDPOINT","console","log","user","id","parse","search","conv_id","off","classes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,IAAMC,SAAS,GAAGD,UAAU,CAAC,UAACE,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AADiC,GAAZ;AAAA,CAAD,CAA5B;AAMA,IAAIC,MAAJ;AAEA,eAAe,SAASC,IAAT,OAA4B;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAGzC;AACA;AAJyC,oBAKXX,UAAU,CAACG,UAAD,CALC;AAAA,MAKjCS,MALiC,eAKjCA,MALiC;AAAA,MAKzBC,SALyB,eAKzBA,SALyB;;AAAA,kBAMGZ,QAAQ,CAAC,IAAD,CANX;AAAA;AAAA,MAMlCa,cANkC;AAAA,MAMlBC,iBANkB;;AAAA,mBAOjBd,QAAQ,CAAC,IAAD,CAPS;AAAA;AAAA,MAOlCe,IAPkC;AAAA,MAO5BC,OAP4B;;AAAA,mBAQbhB,QAAQ,CAAC,IAAD,CARK;AAAA;AAAA,MAQlCiB,MARkC;AAAA,MAQ1BC,SAR0B;;AAAA,mBASXlB,QAAQ,CAAC,EAAD,CATG;AAAA;AAAA,MASlCmB,OATkC;AAAA,MASzBC,UATyB;;AAAA,mBAUTpB,QAAQ,CAAC,EAAD,CAVC;AAAA;AAAA,MAUlCqB,QAVkC;AAAA,MAUxBC,WAVwB;;AAWzC,MAAMC,QAAQ,GAAG,gBAAjB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bd,MAAM,CAACe,IAAP,CAAYC,EAAxC;AAEA7B,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACP,EADO,CAAT;AAIAA,EAAAA,SAAS,CAAC,YAAM;AAAA,6BACMG,WAAW,CAAC2B,KAAZ,CAAkBlB,QAAQ,CAACmB,MAA3B,CADN;AAAA,QACNC,OADM,sBACNA,OADM;;AAEdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACAd,IAAAA,OAAO,CAACc,OAAD,CAAP;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBV,IAApB;AACAP,IAAAA,MAAM,GAAGL,EAAE,CAACoB,QAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCV,IAAlC;AAEA,WAAO,YAAM;AACXP,MAAAA,MAAM,CAACuB,GAAP;AACD,KAFD;AAGD,GAZQ,EAYP,CAACR,QAAD,EAAWb,QAAQ,CAACmB,MAApB,CAZO,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAEG,OAAO,CAACzB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAA+CQ,IAA/C,CADD,CADF;AAKD","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport queryString from 'query-string';\nimport { UserCookie } from \"../hooks/UserCookie\";\nimport io from 'socket.io-client';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  }\n}));\n\nlet socket;\n\nexport default function Chat({ location }) {\n\n\n  // API call to get all messages for particular conversation using conversation_id from url\n  // API call to get id's for conversation\n  const { cookie, setCookie } = useContext(UserCookie);\n  const [conversationID, setConversationID] = useState(null);\n  const [room, setRoom] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:8080';\n\n  console.log('current user', cookie.user.id);\n\n  useEffect(() => {\n  },[])\n\n\n  useEffect(() => {\n    const { conv_id } = queryString.parse(location.search);\n    console.log(conv_id);\n    setRoom(conv_id);\n    console.log('room', room);\n    socket = io(ENDPOINT);\n    console.log(socket);\n    console.log('the room we are in', room)\n\n    return () => {\n      socket.off();\n    }\n  },[ENDPOINT, location.search])\n\n  return (\n    <div className={classes.root}>\n     <h1>We are on the chat page currently in room {room}</h1>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}